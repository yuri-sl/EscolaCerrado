// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

// NextAuth Models
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?
    access_token             String?
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    role          String     @default("USER")
    senha         String
    accounts      Account[]
    sessions      Session[]
    administrador Administrador?
    funcionario   Funcionario?
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// Modelos do Sistema
model Administrador {
    id     Int    @id @default(autoincrement())
    userId String @unique
    user   User   @relation(fields: [userId], references: [id])
    cargo  String
    foto   String?
    cases  Case[]
}

model Funcionario {
    id     Int    @id @default(autoincrement())
    userId String @unique
    user   User   @relation(fields: [userId], references: [id])
    cargo  String
    foto   String?
}

model Case {
    id              Int    @id @default(autoincrement())
    titulo         String
    descricao      String
    foto          String?
    administradorId Int
    administrador   Administrador @relation(fields: [administradorId], references: [id])
}

model Usuario{
    id Int @id@default(autoincrement())
    nome String
    cargo String
    email  String  @unique @default("email@example.com")
    foto   String  @default("default.jpg")
    senha  String  @default("senha_padrao")
}

model Success_Cases{
    id Int @id@default(autoincrement())
    titulo String
    descricao String
    foto String
}